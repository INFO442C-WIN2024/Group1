{"ast":null,"code":"var _jsxFileName = \"/Users/meiguowashington/Desktop/final/Group1/src/QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { questions, quizResultDescriptions } from './data';\nimport { useNavigate } from 'react-router-dom';\nimport './QuizPage.css';\nimport squirrelImg from './images/Squirrel.png';\nimport penguinImg from './images/Penguin.png';\nimport owlImg from './images/Owl.png';\nimport foxImg from './images/Fox.png';\nimport raccoonImg from './images/Raccoon.png';\nimport cheetahImg from './images/Cheetah.png';\nimport goldenRetrieverImg from './images/GoldenRetriever.png';\nimport capybaraImg from './images/Capybara.png';\n\n// Animal image mapping\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst animalImages = {\n  Squirrel: squirrelImg,\n  Penguin: penguinImg,\n  Owl: owlImg,\n  Fox: foxImg,\n  Raccoon: raccoonImg,\n  Cheetah: cheetahImg,\n  'Golden Retriever': goldenRetrieverImg,\n  Capybara: capybaraImg\n};\nconst allImagesArray = Object.values(animalImages);\nconst QuizPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [result, setResult] = useState(null);\n  const [stage, setStage] = useState('quiz');\n\n  // Loading animation states\n  const [ellipsisCount, setEllipsisCount] = useState(0);\n  const [imageOpacity, setImageOpacity] = useState(0);\n  const [randomLoadingImg, setRandomLoadingImg] = useState(allImagesArray[0]);\n  const [finalAnimal, setFinalAnimal] = useState(null);\n\n  // Handle option selection\n  const handleOptionClick = (questionId, optionIndex) => {\n    const selectedOptions = answers[questionId] || [];\n    if (selectedOptions.includes(optionIndex)) {\n      const newSelection = selectedOptions.filter(i => i !== optionIndex);\n      setAnswers({\n        ...answers,\n        [questionId]: newSelection\n      });\n    } else {\n      if (selectedOptions.length < 2) {\n        setAnswers({\n          ...answers,\n          [questionId]: [...selectedOptions, optionIndex]\n        });\n      } else {\n        alert('You can select at most 2 options for this question.');\n      }\n    }\n  };\n\n  // Go to next question\n  const goToNextQuestion = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (!answers[currentQuestion.id] || answers[currentQuestion.id].length === 0) {\n      alert(\"Please select at least one option before moving to the next question.\");\n      return;\n    }\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  // Go to previous question\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  // Submit quiz\n  const handleSubmit = () => {\n    // Check all questions have at least one selection\n    for (let i = 0; i < questions.length; i++) {\n      const q = questions[i];\n      const selected = answers[q.id] || [];\n      if (selected.length === 0) {\n        alert(`Please select at least one option for question ${i + 1}`);\n        return;\n      }\n    }\n\n    // Calculate scores\n    const scores = {\n      Squirrel: 0,\n      Penguin: 0,\n      Owl: 0,\n      Fox: 0,\n      Raccoon: 0,\n      Cheetah: 0,\n      'Golden Retriever': 0,\n      Capybara: 0\n    };\n    questions.forEach(question => {\n      const selectedIndices = answers[question.id] || [];\n      selectedIndices.forEach(idx => {\n        const selectedOption = question.options[idx];\n        for (let animal in selectedOption.score) {\n          scores[animal] += selectedOption.score[animal];\n        }\n      });\n    });\n\n    // Find highest score\n    let computedFinalAnimal = null;\n    let highestScore = -Infinity;\n    for (const animal of Object.keys(scores)) {\n      if (scores[animal] > highestScore) {\n        highestScore = scores[animal];\n        computedFinalAnimal = animal;\n      }\n    }\n    setFinalAnimal(computedFinalAnimal);\n    setResult(quizResultDescriptions[computedFinalAnimal]);\n    setStage('loading');\n    setEllipsisCount(0);\n    setImageOpacity(0);\n  };\n\n  // Loading stage animation\n  useEffect(() => {\n    if (stage === 'loading') {\n      const ellipsisTimer = setInterval(() => {\n        setEllipsisCount(c => c < 3 ? c + 1 : 0);\n      }, 500);\n      const flashingTimer = setInterval(() => {\n        const randomIndex = Math.floor(Math.random() * allImagesArray.length);\n        setRandomLoadingImg(allImagesArray[randomIndex]);\n      }, 200);\n      const fadeTimer = setTimeout(() => {\n        setImageOpacity(1);\n      }, 1000);\n      const loadingTimer = setTimeout(() => {\n        clearInterval(ellipsisTimer);\n        clearInterval(flashingTimer);\n        setStage('result');\n      }, 3000);\n      return () => {\n        clearInterval(ellipsisTimer);\n        clearInterval(flashingTimer);\n        clearTimeout(loadingTimer);\n        clearTimeout(fadeTimer);\n      };\n    }\n  }, [stage]);\n\n  // Retake quiz\n  const handleRetake = () => {\n    setAnswers({});\n    setResult(null);\n    setStage('quiz');\n    setCurrentQuestionIndex(0);\n  };\n\n  // Go to personality details\n  const handleLearnMore = () => {\n    navigate('/personality');\n  };\n  const totalQuestions = questions.length;\n  const question = questions[currentQuestionIndex];\n  const isSelected = idx => (answers[question.id] || []).includes(idx);\n  const finalAnimalImg = animalImages[finalAnimal] || penguinImg;\n\n  // Format text for result page\n  const formatText = text => {\n    if (!text) return null;\n    const str = Array.isArray(text) ? text.join('\\n') : text;\n    return str.split('\\n').map((line, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Loading stage\n  if (stage === 'loading') {\n    const dots = '.'.repeat(ellipsisCount);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-title\",\n        children: [\"You are a\", dots]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-image-container\",\n        style: {\n          opacity: imageOpacity\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: randomLoadingImg,\n          alt: \"animal\",\n          className: \"loading-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Result stage\n  if (stage === 'result' && result) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"result-title\",\n            children: result.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"result-subtitle\",\n            children: result.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: finalAnimalImg,\n            alt: result.title,\n            className: \"result-animal-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"result-section-title\",\n            children: \"Who am I?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"result-text\",\n            children: formatText(result.intro)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"result-section-title\",\n            children: \"Strength\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"result-text\",\n            children: formatText(result.strengths)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"result-section-title\",\n            children: \"Weakness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"result-text\",\n            children: formatText(result.weaknesses)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"result-section-title\",\n            children: \"Ways to Improve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"result-text\",\n            children: formatText(result.waysToImprove)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLearnMore,\n          className: \"result-button-back\",\n          children: \"See other types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRetake,\n          className: \"result-button-next\",\n          children: \"Try again?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Quiz stage\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-number\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle-background\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle-border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-number-text\",\n        children: [\"#\", currentQuestionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-text\",\n      children: question.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: question.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `option-box ${isSelected(idx) ? 'selected-option' : ''}`,\n        onClick: () => handleOptionClick(question.id, idx),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-bg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-text\",\n          dangerouslySetInnerHTML: {\n            __html: opt.option\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [currentQuestionIndex > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back-button\",\n        onClick: goToPreviousQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"back-bg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"back-text\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), currentQuestionIndex < totalQuestions - 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"next-button\",\n        onClick: goToNextQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"next-bg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"next-text\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"next-button\",\n        onClick: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"next-bg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"next-text\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-line\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"100%\",\n          height: \"11\",\n          viewBox: \"0 0 970 11\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M0.5 5.5H969.5\",\n            stroke: \"black\",\n            strokeWidth: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-circles\",\n        children: Array.from({\n          length: totalQuestions\n        }).map((_, idx) => {\n          const isActive = idx === currentQuestionIndex;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `progress-circle ${isActive ? 'active' : ''}`,\n            children: isActive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-inner-black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-inner-yellow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-circle-text\",\n                children: idx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-inner-blue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-circle-text\",\n                children: idx + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"Hx1l35JcUjU6YvTFbyBUApXGVCY=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","questions","quizResultDescriptions","useNavigate","squirrelImg","penguinImg","owlImg","foxImg","raccoonImg","cheetahImg","goldenRetrieverImg","capybaraImg","jsxDEV","_jsxDEV","Fragment","_Fragment","animalImages","Squirrel","Penguin","Owl","Fox","Raccoon","Cheetah","Capybara","allImagesArray","Object","values","QuizPage","_s","navigate","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","result","setResult","stage","setStage","ellipsisCount","setEllipsisCount","imageOpacity","setImageOpacity","randomLoadingImg","setRandomLoadingImg","finalAnimal","setFinalAnimal","handleOptionClick","questionId","optionIndex","selectedOptions","includes","newSelection","filter","i","length","alert","goToNextQuestion","currentQuestion","id","goToPreviousQuestion","handleSubmit","q","selected","scores","forEach","question","selectedIndices","idx","selectedOption","options","animal","score","computedFinalAnimal","highestScore","Infinity","keys","ellipsisTimer","setInterval","c","flashingTimer","randomIndex","Math","floor","random","fadeTimer","setTimeout","loadingTimer","clearInterval","clearTimeout","handleRetake","handleLearnMore","totalQuestions","isSelected","finalAnimalImg","formatText","text","str","Array","isArray","join","split","map","line","index","children","fileName","_jsxFileName","lineNumber","columnNumber","dots","repeat","className","style","opacity","src","alt","title","subtitle","intro","strengths","weaknesses","waysToImprove","onClick","opt","dangerouslySetInnerHTML","__html","option","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","from","_","isActive","_c","$RefreshReg$"],"sources":["/Users/meiguowashington/Desktop/final/Group1/src/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { questions, quizResultDescriptions } from './data';\nimport { useNavigate } from 'react-router-dom';\nimport './QuizPage.css';\n\nimport squirrelImg from './images/Squirrel.png';\nimport penguinImg from './images/Penguin.png';\nimport owlImg from './images/Owl.png';\nimport foxImg from './images/Fox.png';\nimport raccoonImg from './images/Raccoon.png';\nimport cheetahImg from './images/Cheetah.png';\nimport goldenRetrieverImg from './images/GoldenRetriever.png';\nimport capybaraImg from './images/Capybara.png';\n\n// Animal image mapping\nconst animalImages = {\n  Squirrel: squirrelImg,\n  Penguin: penguinImg,\n  Owl: owlImg,\n  Fox: foxImg,\n  Raccoon: raccoonImg,\n  Cheetah: cheetahImg,\n  'Golden Retriever': goldenRetrieverImg,\n  Capybara: capybaraImg,\n};\nconst allImagesArray = Object.values(animalImages);\n\nconst QuizPage = () => {\n  const navigate = useNavigate();\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [result, setResult] = useState(null);\n  const [stage, setStage] = useState('quiz');\n\n  // Loading animation states\n  const [ellipsisCount, setEllipsisCount] = useState(0);\n  const [imageOpacity, setImageOpacity] = useState(0);\n  const [randomLoadingImg, setRandomLoadingImg] = useState(allImagesArray[0]);\n  const [finalAnimal, setFinalAnimal] = useState(null);\n\n  // Handle option selection\n  const handleOptionClick = (questionId, optionIndex) => {\n    const selectedOptions = answers[questionId] || [];\n    if (selectedOptions.includes(optionIndex)) {\n      const newSelection = selectedOptions.filter((i) => i !== optionIndex);\n      setAnswers({ ...answers, [questionId]: newSelection });\n    } else {\n      if (selectedOptions.length < 2) {\n        setAnswers({ ...answers, [questionId]: [...selectedOptions, optionIndex] });\n      } else {\n        alert('You can select at most 2 options for this question.');\n      }\n    }\n  };\n\n  // Go to next question\n  const goToNextQuestion = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (!answers[currentQuestion.id] || answers[currentQuestion.id].length === 0) {\n      alert(\"Please select at least one option before moving to the next question.\");\n      return;\n    }\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  // Go to previous question\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  // Submit quiz\n  const handleSubmit = () => {\n    // Check all questions have at least one selection\n    for (let i = 0; i < questions.length; i++) {\n      const q = questions[i];\n      const selected = answers[q.id] || [];\n      if (selected.length === 0) {\n        alert(`Please select at least one option for question ${i + 1}`);\n        return;\n      }\n    }\n\n    // Calculate scores\n    const scores = {\n      Squirrel: 0,\n      Penguin: 0,\n      Owl: 0,\n      Fox: 0,\n      Raccoon: 0,\n      Cheetah: 0,\n      'Golden Retriever': 0,\n      Capybara: 0,\n    };\n\n    questions.forEach((question) => {\n      const selectedIndices = answers[question.id] || [];\n      selectedIndices.forEach((idx) => {\n        const selectedOption = question.options[idx];\n        for (let animal in selectedOption.score) {\n          scores[animal] += selectedOption.score[animal];\n        }\n      });\n    });\n\n    // Find highest score\n    let computedFinalAnimal = null;\n    let highestScore = -Infinity;\n    for (const animal of Object.keys(scores)) {\n      if (scores[animal] > highestScore) {\n        highestScore = scores[animal];\n        computedFinalAnimal = animal;\n      }\n    }\n    setFinalAnimal(computedFinalAnimal);\n    setResult(quizResultDescriptions[computedFinalAnimal]);\n    setStage('loading');\n    setEllipsisCount(0);\n    setImageOpacity(0);\n  };\n\n  // Loading stage animation\n  useEffect(() => {\n    if (stage === 'loading') {\n      const ellipsisTimer = setInterval(() => {\n        setEllipsisCount((c) => (c < 3 ? c + 1 : 0));\n      }, 500);\n\n      const flashingTimer = setInterval(() => {\n        const randomIndex = Math.floor(Math.random() * allImagesArray.length);\n        setRandomLoadingImg(allImagesArray[randomIndex]);\n      }, 200);\n\n      const fadeTimer = setTimeout(() => {\n        setImageOpacity(1);\n      }, 1000);\n\n      const loadingTimer = setTimeout(() => {\n        clearInterval(ellipsisTimer);\n        clearInterval(flashingTimer);\n        setStage('result');\n      }, 3000);\n\n      return () => {\n        clearInterval(ellipsisTimer);\n        clearInterval(flashingTimer);\n        clearTimeout(loadingTimer);\n        clearTimeout(fadeTimer);\n      };\n    }\n  }, [stage]);\n\n  // Retake quiz\n  const handleRetake = () => {\n    setAnswers({});\n    setResult(null);\n    setStage('quiz');\n    setCurrentQuestionIndex(0);\n  };\n\n  // Go to personality details\n  const handleLearnMore = () => {\n    navigate('/personality');\n  };\n\n  const totalQuestions = questions.length;\n  const question = questions[currentQuestionIndex];\n  const isSelected = (idx) => (answers[question.id] || []).includes(idx);\n  const finalAnimalImg = animalImages[finalAnimal] || penguinImg;\n\n  // Format text for result page\n  const formatText = (text) => {\n    if (!text) return null;\n    const str = Array.isArray(text) ? text.join('\\n') : text;\n    return str.split('\\n').map((line, index) => (\n      <span key={index}>\n        {line}\n        <br />\n      </span>\n    ));\n  };\n\n  // Loading stage\n  if (stage === 'loading') {\n    const dots = '.'.repeat(ellipsisCount);\n    return (\n      <div className=\"loading-screen\">\n        <div className=\"loading-title\">You are a{dots}</div>\n        <div className=\"loading-image-container\" style={{ opacity: imageOpacity }}>\n          <img\n            src={randomLoadingImg}\n            alt=\"animal\"\n            className=\"loading-image\"\n          />\n        </div>\n      </div>\n    );\n  }\n\n  // Result stage\n  if (stage === 'result' && result) {\n    return (\n      <div className=\"result-page\">\n        <div className=\"result-card\">\n          <div className=\"result-header\">\n            <h1 className=\"result-title\">{result.title}</h1>\n            <h3 className=\"result-subtitle\">{result.subtitle}</h3>\n            <img src={finalAnimalImg} alt={result.title} className=\"result-animal-image\" />\n          </div>\n          <div className=\"result-content\">\n            <h2 className=\"result-section-title\">Who am I?</h2>\n            <p className=\"result-text\">{formatText(result.intro)}</p>\n            <h2 className=\"result-section-title\">Strength</h2>\n            <p className=\"result-text\">{formatText(result.strengths)}</p>\n            <h2 className=\"result-section-title\">Weakness</h2>\n            <p className=\"result-text\">{formatText(result.weaknesses)}</p>\n            <h2 className=\"result-section-title\">Ways to Improve</h2>\n            <p className=\"result-text\">{formatText(result.waysToImprove)}</p>\n          </div>\n        </div>\n        <div className=\"result-buttons\">\n          <button onClick={handleLearnMore} className=\"result-button-back\">See other types</button>\n          <button onClick={handleRetake} className=\"result-button-next\">Try again?</button>\n        </div>\n      </div>\n    );\n  }\n\n  // Quiz stage\n  return (\n    <div className=\"quiz-container\">\n      <div className=\"question-number\">\n        <div className=\"circle-background\"></div>\n        <div className=\"circle-border\"></div>\n        <div className=\"question-number-text\">#{currentQuestionIndex + 1}</div>\n      </div>\n\n      <div className=\"question-text\">{question.question}</div>\n\n      <div className=\"options-container\">\n        {question.options.map((opt, idx) => (\n          <div\n            key={idx}\n            className={`option-box ${isSelected(idx) ? 'selected-option' : ''}`}\n            onClick={() => handleOptionClick(question.id, idx)}\n          >\n            <div className=\"option-bg\"></div>\n            <div className=\"option-text\" dangerouslySetInnerHTML={{ __html: opt.option }} />\n          </div>\n        ))}\n      </div>\n\n      <div className=\"navigation-buttons\">\n        {currentQuestionIndex > 0 && (\n          <div className=\"back-button\" onClick={goToPreviousQuestion}>\n            <div className=\"back-bg\"></div>\n            <div className=\"back-text\">Back</div>\n          </div>\n        )}\n\n        {currentQuestionIndex < totalQuestions - 1 ? (\n          <div className=\"next-button\" onClick={goToNextQuestion}>\n            <div className=\"next-bg\"></div>\n            <div className=\"next-text\">Next</div>\n          </div>\n        ) : (\n          <div className=\"next-button\" onClick={handleSubmit}>\n            <div className=\"next-bg\"></div>\n            <div className=\"next-text\">Submit</div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"progress-container\">\n        <div className=\"progress-line\">\n          <svg width=\"100%\" height=\"11\" viewBox=\"0 0 970 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M0.5 5.5H969.5\" stroke=\"black\" strokeWidth=\"10\" />\n          </svg>\n        </div>\n\n        <div className=\"progress-circles\">\n          {Array.from({ length: totalQuestions }).map((_, idx) => {\n            const isActive = idx === currentQuestionIndex;\n            return (\n              <div key={idx} className={`progress-circle ${isActive ? 'active' : ''}`}>\n                {isActive ? (\n                  <>\n                    <div className=\"progress-inner-black\"></div>\n                    <div className=\"progress-inner-yellow\"></div>\n                    <div className=\"progress-circle-text\">{idx + 1}</div>\n                  </>\n                ) : (\n                  <>\n                    <div className=\"progress-inner-blue\"></div>\n                    <div className=\"progress-circle-text\">{idx + 1}</div>\n                  </>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QuizPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}