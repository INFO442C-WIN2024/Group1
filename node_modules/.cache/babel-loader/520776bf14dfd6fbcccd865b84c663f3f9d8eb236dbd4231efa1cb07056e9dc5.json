{"ast":null,"code":"import _objectSpread from\"/Users/willll/Desktop/QUIZ-TEST/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{questions,quizResultDescriptions}from'./data';import{useNavigate}from'react-router-dom';import'./QuizPage.css';import squirrelImg from'./images/Squirrel.png';import penguinImg from'./images/Penguin.png';import owlImg from'./images/Owl.png';import foxImg from'./images/Fox.png';import raccoonImg from'./images/Raccoon.png';import cheetahImg from'./images/Cheetah.png';import goldenRetrieverImg from'./images/GoldenRetriever.png';import capybaraImg from'./images/Capybara.png';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const animalImages={Squirrel:squirrelImg,Penguin:penguinImg,Owl:owlImg,Fox:foxImg,Raccoon:raccoonImg,Cheetah:cheetahImg,'Golden Retriever':goldenRetrieverImg,Capybara:capybaraImg};const allImagesArray=Object.values(animalImages);const QuizPage=()=>{const navigate=useNavigate();const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[answers,setAnswers]=useState({});const[result,setResult]=useState(null);const[stage,setStage]=useState('quiz');// “You are a...”\nconst[ellipsisCount,setEllipsisCount]=useState(0);const[imageOpacity,setImageOpacity]=useState(0);const[randomLoadingImg,setRandomLoadingImg]=useState(allImagesArray[0]);const[finalAnimal,setFinalAnimal]=useState(null);const handleOptionClick=(questionId,optionIndex)=>{const selectedOptions=answers[questionId]||[];if(selectedOptions.includes(optionIndex)){const newSelection=selectedOptions.filter(i=>i!==optionIndex);setAnswers(_objectSpread(_objectSpread({},answers),{},{[questionId]:newSelection}));}else{if(selectedOptions.length<2){setAnswers(_objectSpread(_objectSpread({},answers),{},{[questionId]:[...selectedOptions,optionIndex]}));}else{alert('You can select at most 2 options for this question.');}}};const goToNextQuestion=()=>{const currentQuestion=questions[currentQuestionIndex];if(!answers[currentQuestion.id]||answers[currentQuestion.id].length===0){alert(\"Please select at least one option before moving to the next question.\");return;}if(currentQuestionIndex<questions.length-1){setCurrentQuestionIndex(currentQuestionIndex+1);}};const goToPreviousQuestion=()=>{if(currentQuestionIndex>0){setCurrentQuestionIndex(currentQuestionIndex-1);}};const handleSubmit=()=>{for(let i=0;i<questions.length;i++){const q=questions[i];const selected=answers[q.id]||[];if(selected.length===0){alert(\"Please select at least one option for question \".concat(i+1));return;}}const scores={Squirrel:0,Penguin:0,Owl:0,Fox:0,Raccoon:0,Cheetah:0,'Golden Retriever':0,Capybara:0};questions.forEach(question=>{const selectedIndices=answers[question.id]||[];selectedIndices.forEach(idx=>{const selectedOption=question.options[idx];for(let animal in selectedOption.score){scores[animal]+=selectedOption.score[animal];}});});let computedFinalAnimal=null;let highestScore=-Infinity;for(const animal of Object.keys(scores)){if(scores[animal]>highestScore){highestScore=scores[animal];computedFinalAnimal=animal;}}setFinalAnimal(computedFinalAnimal);setResult(quizResultDescriptions[computedFinalAnimal]);setStage('loading');setEllipsisCount(0);setImageOpacity(0);};useEffect(()=>{if(stage==='loading'){const ellipsisTimer=setInterval(()=>{setEllipsisCount(c=>c<3?c+1:0);},500);const flashingTimer=setInterval(()=>{const randomIndex=Math.floor(Math.random()*allImagesArray.length);setRandomLoadingImg(allImagesArray[randomIndex]);},200);const fadeTimer=setTimeout(()=>{setImageOpacity(1);},1000);const loadingTimer=setTimeout(()=>{clearInterval(ellipsisTimer);clearInterval(flashingTimer);setStage('result');},3000);return()=>{clearInterval(ellipsisTimer);clearInterval(flashingTimer);clearTimeout(loadingTimer);clearTimeout(fadeTimer);};}},[stage]);const handleRetake=()=>{setAnswers({});setResult(null);setStage('quiz');setCurrentQuestionIndex(0);};const handleLearnMore=()=>{navigate('/personality');};const totalQuestions=questions.length;const question=questions[currentQuestionIndex];const hasFiveOptions=question.options.length===5;const shiftDown=hasFiveOptions?110:0;const isSelected=idx=>(answers[question.id]||[]).includes(idx);const getOptionClass=idx=>{if(idx===0)return'option-box option-box-1';if(idx===1)return'option-box option-box-2';if(idx===2)return'option-box option-box-3';if(idx===3)return'option-box option-box-4';if(idx===4)return'option-box option-box-5';return'option-box option-box-1';};const finalAnimalImg=animalImages[finalAnimal]||penguinImg;if(stage==='loading'){const dots='.'.repeat(ellipsisCount);return/*#__PURE__*/_jsxs(\"div\",{style:{width:'1280px',height:'936px',background:'#0057FF',paddingTop:'128px',paddingBottom:'341px',paddingLeft:'120px',paddingRight:'120px',display:'inline-flex',flexDirection:'column',justifyContent:'flex-start',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:'1040px',height:'212px',textAlign:'center',color:'white',fontSize:'128px',fontFamily:'rl-aqva, sans-serif',fontWeight:900,wordWrap:'break-word'},children:[\"You are a\",dots]}),/*#__PURE__*/_jsx(\"div\",{style:{width:'254px',height:'254px',justifyContent:'center',alignItems:'center',display:'inline-flex',transition:'opacity 1s',opacity:imageOpacity},children:/*#__PURE__*/_jsx(\"img\",{style:{width:'254px',height:'254px'},src:randomLoadingImg,alt:\"animal\"})})]});}const formatText=text=>{if(!text)return null;// 如果 text 为数组，则先用换行符拼接成字符串\nconst str=Array.isArray(text)?text.join('\\n'):text;return str.split('\\n').map((line,index)=>/*#__PURE__*/_jsxs(\"span\",{children:[line,/*#__PURE__*/_jsx(\"br\",{})]},index));};if(stage==='result'&&result){return/*#__PURE__*/_jsxs(\"div\",{style:{width:'1280px',background:'#0057FF',padding:'40px',boxSizing:'border-box',marginTop:100},children:[/*#__PURE__*/_jsxs(\"div\",{style:{background:'#CFF1FF',border:'10px solid black',borderRadius:'30px',margin:'20px 350px',width:'650px',padding:'20px',boxSizing:'border-box',color:'black'// 整体文字颜色为黑色\n},children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center'},children:[/*#__PURE__*/_jsx(\"h1\",{style:{margin:'10px 0',fontFamily:'rl-aqva, sans-serif',color:'black'},children:result.title}),/*#__PURE__*/_jsx(\"h3\",{style:{margin:'10px 0',fontFamily:'rl-aqva, sans-serif',color:'black'},children:result.subtitle}),/*#__PURE__*/_jsx(\"img\",{src:finalAnimalImg,alt:result.title,style:{width:'177px',height:'177px'}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px',fontFamily:'Red Rose, sans-serif',color:'black'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{fontWeight:900,fontFamily:'rl-aqva, sans-serif'},children:\"Who am I?\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:700},children:formatText(result.intro)}),/*#__PURE__*/_jsx(\"h2\",{style:{fontWeight:900,fontFamily:'rl-aqva, sans-serif'},children:\"Strength\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:700},children:formatText(result.strengths)}),/*#__PURE__*/_jsx(\"h2\",{style:{fontWeight:900,fontFamily:'rl-aqva, sans-serif'},children:\"Weakness\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:700},children:formatText(result.weaknesses)}),/*#__PURE__*/_jsx(\"h2\",{style:{fontWeight:900,fontFamily:'rl-aqva, sans-serif'},children:\"Ways to Improve\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:700},children:formatText(result.waysToImprove)})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-around',marginTop:'20px',marginLeft:150},children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleLearnMore,className:\"result-button-back\",children:\"See other types\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRetake,className:\"result-button-next\",children:\"Try again?\"})]})]});}// test\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"quiz-wrapper\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-page-container\",style:{minHeight:850+shiftDown},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"question-number-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"circle-background\"}),/*#__PURE__*/_jsx(\"div\",{className:\"circle-border\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-number-text\",children:[\"#\",currentQuestionIndex+1]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-text\",children:question.question}),question.options.map((opt,idx)=>{const classes=getOptionClass(idx);const selectedClass=isSelected(idx)?' selected-option':'';return/*#__PURE__*/_jsxs(\"div\",{className:classes+selectedClass,onClick:()=>handleOptionClick(question.id,idx),children:[/*#__PURE__*/_jsx(\"div\",{className:\"option-bg\"}),/*#__PURE__*/_jsx(\"div\",{className:\"option-text\",dangerouslySetInnerHTML:{__html:opt.option}})]},idx);}),currentQuestionIndex>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"back-button\",style:{top:536+shiftDown},onClick:goToPreviousQuestion,children:[/*#__PURE__*/_jsx(\"div\",{className:\"back-bg\"}),/*#__PURE__*/_jsx(\"div\",{className:\"back-text\",children:\"Back\"})]}),currentQuestionIndex<totalQuestions-1?/*#__PURE__*/_jsxs(\"div\",{className:\"next-button\",style:{top:537+shiftDown},onClick:goToNextQuestion,children:[/*#__PURE__*/_jsx(\"div\",{className:\"next-bg\"}),/*#__PURE__*/_jsx(\"div\",{className:\"next-text\",children:\"Next\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"next-button\",style:{top:537+shiftDown},onClick:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{className:\"next-bg\"}),/*#__PURE__*/_jsx(\"div\",{className:\"next-text\",children:\"Submit\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-line\",style:{top:689.5+shiftDown},children:/*#__PURE__*/_jsx(\"svg\",{width:\"970\",height:\"11\",viewBox:\"0 0 970 11\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M0.5 5.5H969.5\",stroke:\"black\",strokeWidth:\"10\"})})}),Array.from({length:totalQuestions}).map((_,idx)=>{const circleClass=\"progress-circle circle-\".concat(idx+1);const isActive=idx===currentQuestionIndex;return/*#__PURE__*/_jsx(\"div\",{className:circleClass,style:{top:652+shiftDown},children:isActive?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-inner-black\"}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-inner-yellow\"}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-circle-text\",children:idx+1})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-inner-blue\"}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-circle-text\",children:idx+1})]})},idx);})]})});};export default QuizPage;","map":{"version":3,"names":["React","useState","useEffect","questions","quizResultDescriptions","useNavigate","squirrelImg","penguinImg","owlImg","foxImg","raccoonImg","cheetahImg","goldenRetrieverImg","capybaraImg","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","animalImages","Squirrel","Penguin","Owl","Fox","Raccoon","Cheetah","Capybara","allImagesArray","Object","values","QuizPage","navigate","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","result","setResult","stage","setStage","ellipsisCount","setEllipsisCount","imageOpacity","setImageOpacity","randomLoadingImg","setRandomLoadingImg","finalAnimal","setFinalAnimal","handleOptionClick","questionId","optionIndex","selectedOptions","includes","newSelection","filter","i","_objectSpread","length","alert","goToNextQuestion","currentQuestion","id","goToPreviousQuestion","handleSubmit","q","selected","concat","scores","forEach","question","selectedIndices","idx","selectedOption","options","animal","score","computedFinalAnimal","highestScore","Infinity","keys","ellipsisTimer","setInterval","c","flashingTimer","randomIndex","Math","floor","random","fadeTimer","setTimeout","loadingTimer","clearInterval","clearTimeout","handleRetake","handleLearnMore","totalQuestions","hasFiveOptions","shiftDown","isSelected","getOptionClass","finalAnimalImg","dots","repeat","style","width","height","background","paddingTop","paddingBottom","paddingLeft","paddingRight","display","flexDirection","justifyContent","alignItems","children","textAlign","color","fontSize","fontFamily","fontWeight","wordWrap","transition","opacity","src","alt","formatText","text","str","Array","isArray","join","split","map","line","index","padding","boxSizing","marginTop","border","borderRadius","margin","title","subtitle","intro","strengths","weaknesses","waysToImprove","marginLeft","onClick","className","minHeight","opt","classes","selectedClass","dangerouslySetInnerHTML","__html","option","top","viewBox","fill","xmlns","d","stroke","strokeWidth","from","_","circleClass","isActive"],"sources":["/Users/willll/Desktop/QUIZ-TEST/src/QuizPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { questions, quizResultDescriptions } from './data';\nimport { useNavigate } from 'react-router-dom';\nimport './QuizPage.css';\n\nimport squirrelImg from './images/Squirrel.png';\nimport penguinImg from './images/Penguin.png';\nimport owlImg from './images/Owl.png';\nimport foxImg from './images/Fox.png';\nimport raccoonImg from './images/Raccoon.png';\nimport cheetahImg from './images/Cheetah.png';\nimport goldenRetrieverImg from './images/GoldenRetriever.png';\nimport capybaraImg from './images/Capybara.png';\n\nconst animalImages = {\n  Squirrel: squirrelImg,\n  Penguin: penguinImg,\n  Owl: owlImg,\n  Fox: foxImg,\n  Raccoon: raccoonImg,\n  Cheetah: cheetahImg,\n  'Golden Retriever': goldenRetrieverImg,\n  Capybara: capybaraImg,\n};\nconst allImagesArray = Object.values(animalImages);\n\nconst QuizPage = () => {\n  const navigate = useNavigate();\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [result, setResult] = useState(null);\n  const [stage, setStage] = useState('quiz');\n\n  // “You are a...”\n  const [ellipsisCount, setEllipsisCount] = useState(0);\n  const [imageOpacity, setImageOpacity] = useState(0);\n\n  const [randomLoadingImg, setRandomLoadingImg] = useState(allImagesArray[0]);\n\n  const [finalAnimal, setFinalAnimal] = useState(null);\n\n  const handleOptionClick = (questionId, optionIndex) => {\n    const selectedOptions = answers[questionId] || [];\n    if (selectedOptions.includes(optionIndex)) {\n      const newSelection = selectedOptions.filter((i) => i !== optionIndex);\n      setAnswers({ ...answers, [questionId]: newSelection });\n    } else {\n      if (selectedOptions.length < 2) {\n        setAnswers({ ...answers, [questionId]: [...selectedOptions, optionIndex] });\n      } else {\n        alert('You can select at most 2 options for this question.');\n      }\n    }\n  };\n\n  const goToNextQuestion = () => {\n    const currentQuestion = questions[currentQuestionIndex];\n    if (!answers[currentQuestion.id] || answers[currentQuestion.id].length === 0) {\n      alert(\"Please select at least one option before moving to the next question.\");\n      return;\n    }\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const goToPreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const handleSubmit = () => {\n    for (let i = 0; i < questions.length; i++) {\n      const q = questions[i];\n      const selected = answers[q.id] || [];\n      if (selected.length === 0) {\n        alert(`Please select at least one option for question ${i + 1}`);\n        return;\n      }\n    }\n\n    const scores = {\n      Squirrel: 0,\n      Penguin: 0,\n      Owl: 0,\n      Fox: 0,\n      Raccoon: 0,\n      Cheetah: 0,\n      'Golden Retriever': 0,\n      Capybara: 0,\n    };\n\n    questions.forEach((question) => {\n      const selectedIndices = answers[question.id] || [];\n      selectedIndices.forEach((idx) => {\n        const selectedOption = question.options[idx];\n        for (let animal in selectedOption.score) {\n          scores[animal] += selectedOption.score[animal];\n        }\n      });\n    });\n\n    let computedFinalAnimal = null;\n    let highestScore = -Infinity;\n    for (const animal of Object.keys(scores)) {\n      if (scores[animal] > highestScore) {\n        highestScore = scores[animal];\n        computedFinalAnimal = animal;\n      }\n    }\n    setFinalAnimal(computedFinalAnimal);\n    setResult(quizResultDescriptions[computedFinalAnimal]);\n    setStage('loading');\n    setEllipsisCount(0);\n    setImageOpacity(0);\n  };\n\n  useEffect(() => {\n    if (stage === 'loading') {\n      const ellipsisTimer = setInterval(() => {\n        setEllipsisCount((c) => (c < 3 ? c + 1 : 0));\n      }, 500);\n\n      const flashingTimer = setInterval(() => {\n        const randomIndex = Math.floor(Math.random() * allImagesArray.length);\n        setRandomLoadingImg(allImagesArray[randomIndex]);\n      }, 200);\n\n      const fadeTimer = setTimeout(() => {\n        setImageOpacity(1);\n      }, 1000);\n\n      const loadingTimer = setTimeout(() => {\n        clearInterval(ellipsisTimer);\n        clearInterval(flashingTimer);\n        setStage('result');\n      }, 3000);\n\n      return () => {\n        clearInterval(ellipsisTimer);\n        clearInterval(flashingTimer);\n        clearTimeout(loadingTimer);\n        clearTimeout(fadeTimer);\n      };\n    }\n  }, [stage]);\n\n  const handleRetake = () => {\n    setAnswers({});\n    setResult(null);\n    setStage('quiz');\n    setCurrentQuestionIndex(0);\n  };\n\n  const handleLearnMore = () => {\n    navigate('/personality');\n  };\n\n  const totalQuestions = questions.length;\n  const question = questions[currentQuestionIndex];\n  const hasFiveOptions = question.options.length === 5;\n  const shiftDown = hasFiveOptions ? 110 : 0;\n  const isSelected = (idx) => (answers[question.id] || []).includes(idx);\n  const getOptionClass = (idx) => {\n    if (idx === 0) return 'option-box option-box-1';\n    if (idx === 1) return 'option-box option-box-2';\n    if (idx === 2) return 'option-box option-box-3';\n    if (idx === 3) return 'option-box option-box-4';\n    if (idx === 4) return 'option-box option-box-5';\n    return 'option-box option-box-1';\n  };\n\n  const finalAnimalImg = animalImages[finalAnimal] || penguinImg;\n\n  if (stage === 'loading') {\n    const dots = '.'.repeat(ellipsisCount);\n    return (\n      <div\n        style={{\n          width: '1280px',\n          height: '936px',\n          background: '#0057FF',\n          paddingTop: '128px',\n          paddingBottom: '341px',\n          paddingLeft: '120px',\n          paddingRight: '120px',\n          display: 'inline-flex',\n          flexDirection: 'column',\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n        }}\n      >\n        <div\n          style={{\n            width: '1040px',\n            height: '212px',\n            textAlign: 'center',\n            color: 'white',\n            fontSize: '128px',\n            fontFamily: 'rl-aqva, sans-serif',\n            fontWeight: 900,\n            wordWrap: 'break-word',\n          }}\n        >\n          You are a{dots}\n        </div>\n        <div\n          style={{\n            width: '254px',\n            height: '254px',\n            justifyContent: 'center',\n            alignItems: 'center',\n            display: 'inline-flex',\n            transition: 'opacity 1s',\n            opacity: imageOpacity,\n          }}\n        >\n          <img\n            style={{ width: '254px', height: '254px' }}\n            src={randomLoadingImg}\n            alt=\"animal\"\n          />\n        </div>\n      </div>\n    );\n  }\n\n  const formatText = (text) => {\n    if (!text) return null;\n    // 如果 text 为数组，则先用换行符拼接成字符串\n    const str = Array.isArray(text) ? text.join('\\n') : text;\n    return str.split('\\n').map((line, index) => (\n      <span key={index}>\n        {line}\n        <br />\n      </span>\n    ));\n  };\n\n  if (stage === 'result' && result) {\n    return (\n      <div style={{ width: '1280px', background: '#0057FF', padding: '40px', boxSizing: 'border-box',marginTop: 100 }}>\n        <div style={{ \n          background: '#CFF1FF', \n          border: '10px solid black', \n          borderRadius: '30px', \n          margin: '20px 350px', \n          width: '650px', \n          padding: '20px',\n          boxSizing: 'border-box',\n          color: 'black'  // 整体文字颜色为黑色\n        }}>\n          <div style={{ textAlign: 'center' }}>\n            <h1 style={{ margin: '10px 0', fontFamily: 'rl-aqva, sans-serif', color: 'black' }}>{result.title}</h1>\n            <h3 style={{ margin: '10px 0', fontFamily: 'rl-aqva, sans-serif', color: 'black' }}>{result.subtitle}</h3>\n            <img src={finalAnimalImg} alt={result.title} style={{ width: '177px', height: '177px' }}/>\n          </div>\n          <div style={{ marginTop: '20px', fontFamily: 'Red Rose, sans-serif', color: 'black' }}>\n            <h2 style={{ fontWeight: 900, fontFamily: 'rl-aqva, sans-serif' }}>Who am I?</h2>\n            <p style={{ fontWeight: 700 }}>{formatText(result.intro)}</p>\n            <h2 style={{ fontWeight: 900, fontFamily: 'rl-aqva, sans-serif' }}>Strength</h2>\n            <p style={{ fontWeight: 700 }}>{formatText(result.strengths)}</p>\n            <h2 style={{ fontWeight: 900, fontFamily: 'rl-aqva, sans-serif' }}>Weakness</h2>\n            <p style={{ fontWeight: 700 }}>{formatText(result.weaknesses)}</p>\n            <h2 style={{ fontWeight: 900, fontFamily: 'rl-aqva, sans-serif' }}>Ways to Improve</h2>\n            <p style={{ fontWeight: 700 }}>{formatText(result.waysToImprove)}</p>\n          </div>\n        </div>\n          <div style={{ display: 'flex', justifyContent: 'space-around', marginTop: '20px', marginLeft:150 }}>\n          <button onClick={handleLearnMore} className=\"result-button-back\">See other types</button>\n          <button onClick={handleRetake} className=\"result-button-next\">Try again?</button>\n          </div>\n      </div>\n    );\n  }\n\n  // test\n  return (\n    <div className=\"quiz-wrapper\">\n      <div className=\"quiz-page-container\" style={{ minHeight: 850 + shiftDown }}>\n        <div className=\"question-number-container\">\n          <div className=\"circle-background\"></div>\n          <div className=\"circle-border\"></div>\n          <div className=\"question-number-text\">#{currentQuestionIndex + 1}</div>\n        </div>\n        <div className=\"question-text\">{question.question}</div>\n        {question.options.map((opt, idx) => {\n          const classes = getOptionClass(idx);\n          const selectedClass = isSelected(idx) ? ' selected-option' : '';\n          return (\n            <div\n              key={idx}\n              className={classes + selectedClass}\n              onClick={() => handleOptionClick(question.id, idx)}\n            >\n              <div className=\"option-bg\"></div>\n              <div className=\"option-text\" dangerouslySetInnerHTML={{ __html: opt.option }} />\n            </div>\n          );\n        })}\n        {currentQuestionIndex > 0 && (\n          <div className=\"back-button\" style={{ top: 536 + shiftDown }} onClick={goToPreviousQuestion}>\n            <div className=\"back-bg\"></div>\n            <div className=\"back-text\">Back</div>\n          </div>\n        )}\n        {currentQuestionIndex < totalQuestions - 1 ? (\n          <div className=\"next-button\" style={{ top: 537 + shiftDown }} onClick={goToNextQuestion}>\n            <div className=\"next-bg\"></div>\n            <div className=\"next-text\">Next</div>\n          </div>\n        ) : (\n          <div className=\"next-button\" style={{ top: 537 + shiftDown }} onClick={handleSubmit}>\n            <div className=\"next-bg\"></div>\n            <div className=\"next-text\">Submit</div>\n          </div>\n        )}\n        <div className=\"progress-line\" style={{ top: 689.5 + shiftDown }}>\n          <svg width=\"970\" height=\"11\" viewBox=\"0 0 970 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M0.5 5.5H969.5\" stroke=\"black\" strokeWidth=\"10\" />\n          </svg>\n        </div>\n        {Array.from({ length: totalQuestions }).map((_, idx) => {\n          const circleClass = `progress-circle circle-${idx + 1}`;\n          const isActive = idx === currentQuestionIndex;\n          return (\n            <div key={idx} className={circleClass} style={{ top: 652 + shiftDown }}>\n              {isActive ? (\n                <>\n                  <div className=\"progress-inner-black\"></div>\n                  <div className=\"progress-inner-yellow\"></div>\n                  <div className=\"progress-circle-text\">{idx + 1}</div>\n                </>\n              ) : (\n                <>\n                  <div className=\"progress-inner-blue\"></div>\n                  <div className=\"progress-circle-text\">{idx + 1}</div>\n                </>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default QuizPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}